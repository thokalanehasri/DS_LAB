#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *prev;
    struct node *next;
};
struct node *head = NULL,*tail = NULL,*cur,*temp,*temp1;

struct node* create()
{
   int n;
   printf("Enter the number of nodes\n");
   scanf("%d",&n);
   while(n--){
        cur = (struct node *)malloc(sizeof(struct node));
        printf("Enter the element to be inserted\n");
        scanf("%d",&cur->data);
        cur->prev = NULL;
        cur->next = NULL;
        if (head == NULL)
            head = tail = cur;
        else{
            tail->next = cur;
            cur->prev = tail;
            tail = cur;
        }
   } 
   return head;
}

struct node *insert_begin(int ele){
    cur = (struct node*)malloc(sizeof(struct node));
    cur -> data = ele;
    cur -> prev = NULL;
    cur -> next = head;
    head -> prev = cur;
    head = cur;
    return head;
}

struct node * insert_end(int ele){
    cur = (struct node*)malloc(sizeof(struct node));
    cur -> data = ele;
    cur -> next = NULL;
    cur -> prev = tail;
    tail -> next = cur;
    tail = cur;
    return head;
}

struct node * insert_pos(int pos,int ele){
    int c=1;
    temp = head;
    cur = (struct node*)malloc(sizeof(struct node));
    cur -> data = ele;
    while(c < pos){
        temp1 = temp;
        temp = temp -> next;
        c++;
    }
    temp1 -> next = cur;
    cur -> prev = temp1;
    cur -> next = temp;
    temp -> prev = cur;
    return head;
}

struct node * delete_begin(struct node *head){
    temp = head;
    head = head -> next;
    head -> prev = NULL;
    printf("Deleted element is %d",temp -> data);
    free(temp);
    return head;
}

struct node * delete_end(struct node *head){
    temp = tail;
    tail = tail -> prev;
    tail -> next = NULL;
    printf("Deleted element is %d",temp -> data);
    free(temp);
    return head;
}

struct node * delete_pos(struct node *head,int pos){
    temp = head;
    int c = 1;
    while(c < pos){
        temp1 = temp;
        temp = temp -> next;
        c++;
    }
    temp1 -> next = temp -> next;
    temp -> next -> prev = temp1;
    printf("Deleted element is %d",temp -> data);
    free(temp);
    return head;
}

void display(struct node *head){
    temp = head;
    while(temp -> next != NULL){
        printf("%d -> ",temp -> data);
        temp = temp -> next;
    }
    printf("%d",temp -> data);
}

void reversedisplay(struct node *tail){
    temp = tail;
    while(temp != NULL){
        printf("%d -> ",temp -> data);
        temp = temp -> prev;
    }
}

int main(){   
    struct node* head;
    int ele,ch,pos;
    while(1){
       printf("\n1-create()\n 2-insert at begin\n 3-insert at end\n 4- insert at pos\n 5-delete at begin \n 6-delete at end \n 7-delete at pos \n 8-display \n 9-reverse display\n 10-exit \n");
       printf("enter your choise\n");
       scanf("%d",&ch);
       switch(ch){
            case 1: head = create();
                    break;
            case 2: printf("enter the value to be inserted\n");
                    scanf("%d",&ele);
                    head = insert_begin(ele);
                    break;
            case 3: printf("enter the value to be inserted\n");
                    scanf("%d",&ele);
                    head = insert_end(ele);
                    break;
            case 4: printf("enter the value and position\n ");
                    scanf("%d %d",&ele,&pos);
                    head = insert_pos(pos,ele);
                    break;
            case 5: head = delete_begin(head);
                    break;
            case 6: head = delete_end(tail);
                    break;
            case 7: printf("enter the position\n");
                    scanf("%d",&pos);
                    head = delete_pos(head, pos);
                    break;
            case 8: display(head);
                    break;  
            case 9: reversedisplay(tail);
                    break;
            case 10: exit(0);
            
       }
   }             
}


output:
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
1
Enter the number of nodes
5
Enter the element to be inserted
1
Enter the element to be inserted
2
Enter the element to be inserted
3
Enter the element to be inserted
4
Enter the element to be inserted
5

1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
2
enter the value to be inserted
6

1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
3
enter the value to be inserted
7

1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
4
enter the value and position
 8
4

1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
8
6 -> 1 -> 2 -> 8 -> 3 -> 4 -> 5 -> 7
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
5
Deleted element is 6
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
7
enter the position
3
Deleted element is 8
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
8
1 -> 2 -> 3 -> 4 -> 5 -> 7
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
9
7 -> 5 -> 4 -> 3 -> 2 -> 1 -> 
1-create()
 2-insert at begin
 3-insert at end
 4- insert at pos
 5-delete at begin 
 6-delete at end 
 7-delete at pos 
 8-display 
 9-reverse display
 10-exit 
enter your choise
10
